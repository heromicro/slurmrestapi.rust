/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0Period0Period39Assoc {
    #[serde(rename = "account", skip_serializing_if = "Option::is_none")]
    pub account: Option<String>,
    #[serde(rename = "cluster", skip_serializing_if = "Option::is_none")]
    pub cluster: Option<String>,
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<Box<crate::models::V0039AssocDefault>>,
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<Vec<Flags>>,
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<Box<crate::models::V0039AssocMax>>,
    #[serde(rename = "is_default", skip_serializing_if = "Option::is_none")]
    pub is_default: Option<bool>,
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<Box<crate::models::V0039AssocMin>>,
    #[serde(rename = "parent_account", skip_serializing_if = "Option::is_none")]
    pub parent_account: Option<String>,
    #[serde(rename = "partition", skip_serializing_if = "Option::is_none")]
    pub partition: Option<String>,
    #[serde(rename = "priority", skip_serializing_if = "Option::is_none")]
    pub priority: Option<Box<crate::models::V0Period0Period39Uint32NoVal>>,
    /// List of QOS names
    #[serde(rename = "qos", skip_serializing_if = "Option::is_none")]
    pub qos: Option<Vec<String>>,
    #[serde(rename = "shares_raw", skip_serializing_if = "Option::is_none")]
    pub shares_raw: Option<i32>,
    #[serde(rename = "usage", skip_serializing_if = "Option::is_none")]
    pub usage: Option<Box<crate::models::V0Period0Period39AssocUsage>>,
    #[serde(rename = "user")]
    pub user: String,
}

impl V0Period0Period39Assoc {
    pub fn new(user: String) -> V0Period0Period39Assoc {
        V0Period0Period39Assoc {
            account: None,
            cluster: None,
            default: None,
            flags: None,
            max: None,
            is_default: None,
            min: None,
            parent_account: None,
            partition: None,
            priority: None,
            qos: None,
            shares_raw: None,
            usage: None,
            user,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Flags {
    #[serde(rename = "DELETED")]
    Deleted,
}

impl Default for Flags {
    fn default() -> Flags {
        Self::Deleted
    }
}

