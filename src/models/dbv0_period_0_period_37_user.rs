/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0Period0Period37User : User description



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0Period0Period37User {
    /// Description of administrator level
    #[serde(rename = "administrator_level", skip_serializing_if = "Option::is_none")]
    pub administrator_level: Option<String>,
    #[serde(rename = "associations", skip_serializing_if = "Option::is_none")]
    pub associations: Option<Box<crate::models::Dbv0037UserAssociations>>,
    /// List of assigned coordinators
    #[serde(rename = "coordinators", skip_serializing_if = "Option::is_none")]
    pub coordinators: Option<Vec<crate::models::Dbv0Period0Period37CoordinatorInfo>>,
    #[serde(rename = "default", skip_serializing_if = "Option::is_none")]
    pub default: Option<Box<crate::models::Dbv0037UserDefault>>,
    /// User name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl Dbv0Period0Period37User {
    /// User description
    pub fn new() -> Dbv0Period0Period37User {
        Dbv0Period0Period37User {
            administrator_level: None,
            associations: None,
            coordinators: None,
            default: None,
            name: None,
        }
    }
}


