/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0037JobArray : Array properties (optional)



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0037JobArray {
    /// Job id of array
    #[serde(rename = "job_id", skip_serializing_if = "Option::is_none")]
    pub job_id: Option<i32>,
    #[serde(rename = "limits", skip_serializing_if = "Option::is_none")]
    pub limits: Option<Box<crate::models::Dbv0037JobArrayLimits>>,
    /// Array task
    #[serde(rename = "task", skip_serializing_if = "Option::is_none")]
    pub task: Option<String>,
    /// Array task id
    #[serde(rename = "task_id", skip_serializing_if = "Option::is_none")]
    pub task_id: Option<i32>,
}

impl Dbv0037JobArray {
    /// Array properties (optional)
    pub fn new() -> Dbv0037JobArray {
        Dbv0037JobArray {
            job_id: None,
            limits: None,
            task: None,
            task_id: None,
        }
    }
}


