/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0038QosLimits : Assigned limits



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0038QosLimits {
    /// factor to apply to TRES count for associations using this QOS
    #[serde(rename = "factor", skip_serializing_if = "Option::is_none")]
    pub factor: Option<f32>,
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<Box<crate::models::Dbv0038QosLimitsMax>>,
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<Box<crate::models::Dbv0038QosLimitsMin>>,
}

impl Dbv0038QosLimits {
    /// Assigned limits
    pub fn new() -> Dbv0038QosLimits {
        Dbv0038QosLimits {
            factor: None,
            max: None,
            min: None,
        }
    }
}


