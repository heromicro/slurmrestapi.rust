/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0037JobTime : Time properties



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0037JobTime {
    /// Total time elapsed
    #[serde(rename = "elapsed", skip_serializing_if = "Option::is_none")]
    pub elapsed: Option<i32>,
    /// Total time eligible to run
    #[serde(rename = "eligible", skip_serializing_if = "Option::is_none")]
    pub eligible: Option<i32>,
    /// Timestamp of when job ended
    #[serde(rename = "end", skip_serializing_if = "Option::is_none")]
    pub end: Option<i32>,
    /// Timestamp of when job started
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i32>,
    /// Timestamp of when job submitted
    #[serde(rename = "submission", skip_serializing_if = "Option::is_none")]
    pub submission: Option<i32>,
    /// Timestamp of when job last suspended
    #[serde(rename = "suspended", skip_serializing_if = "Option::is_none")]
    pub suspended: Option<i32>,
    #[serde(rename = "system", skip_serializing_if = "Option::is_none")]
    pub system: Option<Box<crate::models::Dbv0037JobTimeSystem>>,
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<Box<crate::models::Dbv0037JobTimeTotal>>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Box<crate::models::Dbv0037JobTimeUser>>,
    /// Job wall clock time limit
    #[serde(rename = "limit", skip_serializing_if = "Option::is_none")]
    pub limit: Option<i32>,
}

impl Dbv0037JobTime {
    /// Time properties
    pub fn new() -> Dbv0037JobTime {
        Dbv0037JobTime {
            elapsed: None,
            eligible: None,
            end: None,
            start: None,
            submission: None,
            suspended: None,
            system: None,
            total: None,
            user: None,
            limit: None,
        }
    }
}


