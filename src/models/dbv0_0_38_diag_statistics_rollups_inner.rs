/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0038DiagStatisticsRollupsInner : Rollup statistics



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0038DiagStatisticsRollupsInner {
    /// Type of rollup
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    /// Timestamp of last rollup
    #[serde(rename = "last_run", skip_serializing_if = "Option::is_none")]
    pub last_run: Option<i32>,
    /// Timestamp of last cycle
    #[serde(rename = "last_cycle", skip_serializing_if = "Option::is_none")]
    pub last_cycle: Option<i32>,
    /// Max time of all cycles
    #[serde(rename = "max_cycle", skip_serializing_if = "Option::is_none")]
    pub max_cycle: Option<i32>,
    /// Total time (s) spent doing rollup
    #[serde(rename = "total_time", skip_serializing_if = "Option::is_none")]
    pub total_time: Option<i32>,
    /// Average time (s) of cycle
    #[serde(rename = "mean_cycles", skip_serializing_if = "Option::is_none")]
    pub mean_cycles: Option<i32>,
}

impl Dbv0038DiagStatisticsRollupsInner {
    /// Rollup statistics
    pub fn new() -> Dbv0038DiagStatisticsRollupsInner {
        Dbv0038DiagStatisticsRollupsInner {
            r#type: None,
            last_run: None,
            last_cycle: None,
            max_cycle: None,
            total_time: None,
            mean_cycles: None,
        }
    }
}


