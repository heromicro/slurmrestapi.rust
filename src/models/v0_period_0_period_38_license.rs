/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0Period0Period38License {
    /// name of license
    #[serde(rename = "LicenseName", skip_serializing_if = "Option::is_none")]
    pub license_name: Option<String>,
    /// total number of licenses
    #[serde(rename = "Total", skip_serializing_if = "Option::is_none")]
    pub total: Option<i32>,
    /// number of licenses in use
    #[serde(rename = "Used", skip_serializing_if = "Option::is_none")]
    pub used: Option<i32>,
    /// number of licenses available
    #[serde(rename = "Free", skip_serializing_if = "Option::is_none")]
    pub free: Option<i32>,
    /// number of licenses reserved
    #[serde(rename = "Reserved", skip_serializing_if = "Option::is_none")]
    pub reserved: Option<i32>,
    /// license is remote
    #[serde(rename = "Remote", skip_serializing_if = "Option::is_none")]
    pub remote: Option<bool>,
}

impl V0Period0Period38License {
    pub fn new() -> V0Period0Period38License {
        V0Period0Period38License {
            license_name: None,
            total: None,
            used: None,
            free: None,
            reserved: None,
            remote: None,
        }
    }
}


