/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0Period0Period39Wckey {
    #[serde(rename = "accounting", skip_serializing_if = "Option::is_none")]
    pub accounting: Option<Vec<crate::models::V0Period0Period39Accounting>>,
    #[serde(rename = "cluster")]
    pub cluster: String,
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "user")]
    pub user: String,
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<Vec<Flags>>,
}

impl V0Period0Period39Wckey {
    pub fn new(cluster: String, name: String, user: String) -> V0Period0Period39Wckey {
        V0Period0Period39Wckey {
            accounting: None,
            cluster,
            id: None,
            name,
            user,
            flags: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Flags {
    #[serde(rename = "DELETED")]
    Deleted,
}

impl Default for Flags {
    fn default() -> Flags {
        Self::Deleted
    }
}

