/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// V0039RollupStatsInner : recorded rollup statistics



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0039RollupStatsInner {
    /// type
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<RHashType>,
    /// Last time rollup ran (UNIX timestamp)
    #[serde(rename = "last run", skip_serializing_if = "Option::is_none")]
    pub last_run: Option<i32>,
    /// longest rollup time (seconds)
    #[serde(rename = "max_cycle", skip_serializing_if = "Option::is_none")]
    pub max_cycle: Option<i64>,
    /// total time spent doing rollups (seconds)
    #[serde(rename = "total_time", skip_serializing_if = "Option::is_none")]
    pub total_time: Option<i64>,
    /// number of rollups since last_run
    #[serde(rename = "total_cycles", skip_serializing_if = "Option::is_none")]
    pub total_cycles: Option<i64>,
    /// average time for rollup (seconds)
    #[serde(rename = "mean_cycles", skip_serializing_if = "Option::is_none")]
    pub mean_cycles: Option<i64>,
}

impl V0039RollupStatsInner {
    /// recorded rollup statistics
    pub fn new() -> V0039RollupStatsInner {
        V0039RollupStatsInner {
            r#type: None,
            last_run: None,
            max_cycle: None,
            total_time: None,
            total_cycles: None,
            mean_cycles: None,
        }
    }
}

/// type
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "internal")]
    Internal,
    #[serde(rename = "user")]
    User,
    #[serde(rename = "unknown")]
    Unknown,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Internal
    }
}

