/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0Period0Period38SetConfig {
    #[serde(rename = "clusters", skip_serializing_if = "Option::is_none")]
    pub clusters: Option<Vec<crate::models::Dbv0Period0Period38ClustersProperties>>,
    #[serde(rename = "TRES", skip_serializing_if = "Option::is_none")]
    pub tres: Option<Vec<Vec<crate::models::Dbv0038TresListInner>>>,
    #[serde(rename = "accounts", skip_serializing_if = "Option::is_none")]
    pub accounts: Option<Vec<crate::models::Dbv0Period0Period38UpdateAccount>>,
    #[serde(rename = "users", skip_serializing_if = "Option::is_none")]
    pub users: Option<Vec<crate::models::Dbv0Period0Period38User>>,
    #[serde(rename = "qos", skip_serializing_if = "Option::is_none")]
    pub qos: Option<Vec<crate::models::Dbv0Period0Period38Qos>>,
    #[serde(rename = "wckeys", skip_serializing_if = "Option::is_none")]
    pub wckeys: Option<Vec<crate::models::Dbv0Period0Period38Wckey>>,
    #[serde(rename = "associations", skip_serializing_if = "Option::is_none")]
    pub associations: Option<Vec<crate::models::Dbv0Period0Period38Association>>,
}

impl Dbv0Period0Period38SetConfig {
    pub fn new() -> Dbv0Period0Period38SetConfig {
        Dbv0Period0Period38SetConfig {
            clusters: None,
            tres: None,
            accounts: None,
            users: None,
            qos: None,
            wckeys: None,
            associations: None,
        }
    }
}


