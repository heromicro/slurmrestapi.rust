/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// V0Period0Period39Float64NoVal : 64 bit floating point number with flags



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0Period0Period39Float64NoVal {
    /// True if number has been set. False if number is unset
    #[serde(rename = "set", skip_serializing_if = "Option::is_none")]
    pub set: Option<bool>,
    /// True if number has been set to infinite. \"set\" and \"number\" will be ignored.
    #[serde(rename = "infinite", skip_serializing_if = "Option::is_none")]
    pub infinite: Option<bool>,
    /// If set is True the number will be set with value. Otherwise ignore number contents.
    #[serde(rename = "number", skip_serializing_if = "Option::is_none")]
    pub number: Option<f64>,
}

impl V0Period0Period39Float64NoVal {
    /// 64 bit floating point number with flags
    pub fn new() -> V0Period0Period39Float64NoVal {
        V0Period0Period39Float64NoVal {
            set: None,
            infinite: None,
            number: None,
        }
    }
}


