/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0Period0Period38Wckey {
    /// Cluster name
    #[serde(rename = "cluster", skip_serializing_if = "Option::is_none")]
    pub cluster: Option<String>,
    /// wckey database unique id
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    /// wckey name
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// wckey user
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<String>,
    /// List of properties of wckey
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<Vec<String>>,
    /// List of accounting records
    #[serde(rename = "accounting", skip_serializing_if = "Option::is_none")]
    pub accounting: Option<Vec<crate::models::Dbv0Period0Period38Accounting>>,
}

impl Dbv0Period0Period38Wckey {
    pub fn new() -> Dbv0Period0Period38Wckey {
        Dbv0Period0Period38Wckey {
            cluster: None,
            id: None,
            name: None,
            user: None,
            flags: None,
            accounting: None,
        }
    }
}


