/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.39
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct V0Period0Period39Account {
    #[serde(rename = "associations", skip_serializing_if = "Option::is_none")]
    pub associations: Option<Vec<crate::models::V0Period0Period39AssocShort>>,
    #[serde(rename = "coordinators", skip_serializing_if = "Option::is_none")]
    pub coordinators: Option<Vec<crate::models::V0Period0Period39Coord>>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "organization")]
    pub organization: String,
    #[serde(rename = "flags", skip_serializing_if = "Option::is_none")]
    pub flags: Option<Vec<Flags>>,
}

impl V0Period0Period39Account {
    pub fn new(description: String, name: String, organization: String) -> V0Period0Period39Account {
        V0Period0Period39Account {
            associations: None,
            coordinators: None,
            description,
            name,
            organization,
            flags: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Flags {
    #[serde(rename = "DELETED")]
    Deleted,
}

impl Default for Flags {
    fn default() -> Flags {
        Self::Deleted
    }
}

