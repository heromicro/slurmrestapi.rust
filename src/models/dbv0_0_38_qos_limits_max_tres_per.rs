/*
 * Slurm Rest API
 *
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.38
 * Contact: sales@schedmd.com
 * Generated by: https://openapi-generator.tech
 */

/// Dbv0038QosLimitsMaxTresPer : Max TRES per settings



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Dbv0038QosLimitsMaxTresPer {
    /// TRES list of attributes
    #[serde(rename = "account", skip_serializing_if = "Option::is_none")]
    pub account: Option<Vec<crate::models::Dbv0038TresListInner>>,
    /// TRES list of attributes
    #[serde(rename = "job", skip_serializing_if = "Option::is_none")]
    pub job: Option<Vec<crate::models::Dbv0038TresListInner>>,
    /// TRES list of attributes
    #[serde(rename = "node", skip_serializing_if = "Option::is_none")]
    pub node: Option<Vec<crate::models::Dbv0038TresListInner>>,
    /// TRES list of attributes
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<Vec<crate::models::Dbv0038TresListInner>>,
}

impl Dbv0038QosLimitsMaxTresPer {
    /// Max TRES per settings
    pub fn new() -> Dbv0038QosLimitsMaxTresPer {
        Dbv0038QosLimitsMaxTresPer {
            account: None,
            job: None,
            node: None,
            user: None,
        }
    }
}


